<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--
    @RequestScope annotation XML
    RootAppContext.java 에서 정의했던 Bean 을 Xml 에서는 root-context.xml 에서 정의한다.
    bean class 의 위치와 scope 방식을 지정해준다.
    SpringMVCJavaPractice 의 config.RootAppContext 파일과 함께 보면서 이해하면 알기 쉬움.
 -->
<!--    <bean class="controller.RequestScopeBeanXml.beans.DataBean"-->
<!--          scope="request"/>-->
<!--    <bean class="controller.RequestScopeBeanXml.beans.DataBean2"-->
<!--          scope="request" id="reqBean2"/>-->



<!-- SessionScopeBeanXml 예제를 위한 Bean 정의 -->
<!--    <bean class="controller.SessionScopeBeanXml.beans.DataBean1"-->
<!--          scope="session"/>-->

<!-- 이 bean 은 이름을 설정하여 이름으로 주입받는다 -->
<!--    <bean class="controller.SessionScopeBeanXml.beans.DataBean2"-->
<!--    scope="session" id="sessBean2"/>-->



<!-- ApplicationScopeXml 예제 Bean 정의 -->
    <bean class="controller.ApplicationScopeXml.beans.AppliScopeBean"
          scope="application"/>
    <!-- 이 bean 은 이름을 설정하여 이름으로 주입받는다 -->
    <bean class="controller.ApplicationScopeXml.beans.AppliScopeBean2"
          scope="application" id="appBean2"/>

</beans>